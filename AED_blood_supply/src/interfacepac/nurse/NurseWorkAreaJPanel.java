/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfacepac.nurse;

import business.blood.Blood;
import business.organization.Organization;
import business.useraccount.UserAccount;
import business.workqueue.DonorRequest;
import business.workqueue.WorkRequest;
import interfacepac.receptionist.*;
import interfacepac.sysadmin.*;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jiamin.S <shang.j@husky.neu.edu>
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BloodManageCenterJPanel
     */
    JPanel displayPanel;
    UserAccount userAccount;
    Organization organization;

    public NurseWorkAreaJPanel(JPanel displayPanel, UserAccount userAccount, Organization organization) {
        initComponents();
        this.displayPanel = displayPanel;
        this.userAccount = userAccount;
        this.organization = organization;
    }

    public void populateOngoingTbl() {
        DefaultTableModel model = (DefaultTableModel) ongoingTbl.getModel();
        model.setRowCount(0);

        for (WorkRequest request : organization.getWorkQueue().getWorkReqestList()) {
            if (request.getStatus().equals("Accepted")) {
                Object[] row = new Object[4];
                row[0] = request;
                row[1] = request.getSender().getfullName();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getfullName();
                int donation = ((DonorRequest) request).getDonation();
                row[3] = donation;

                model.addRow(row);
            }
        }
    }

    public void populateProcessTbl() {
        DefaultTableModel model = (DefaultTableModel) processTbl.getModel();
        model.setRowCount(0);

        for (WorkRequest request : organization.getWorkQueue().getWorkReqestList()) {
            if (request.getStatus().equals("Nurse Pending")) {
                Object[] row = new Object[4];
                row[0] = request;
                row[1] = request.getSender().getfullName();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getfullName();
                int donation = ((DonorRequest) request).getDonation();
                row[3] = donation;

                model.addRow(row);
            }
        }
    }

    public void populateUntestedTbl() {
        DefaultTableModel model = (DefaultTableModel) untestedTbl.getModel();
        model.setRowCount(0);

        for (WorkRequest request : organization.getWorkQueue().getWorkReqestList()) {
            if (request.getStatus().equals("Drawn")) {
                Object[] row = new Object[4];
                row[0] = request;
                row[1] = request.getSender().getfullName();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getfullName();
                int donation = ((DonorRequest) request).getDonation();
                row[3] = donation;

                model.addRow(row);
            }
        }
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assignBtn = new javax.swing.JButton();
        bloodDrawBtn = new javax.swing.JButton();
        sendtoTestBtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        ongoingTbl = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        processTbl = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        untestedTbl = new javax.swing.JTable();

        assignBtn.setBackground(new java.awt.Color(250, 250, 250));
        assignBtn.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        assignBtn.setText("assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        bloodDrawBtn.setBackground(new java.awt.Color(250, 250, 250));
        bloodDrawBtn.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        bloodDrawBtn.setText("blood draw");
        bloodDrawBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodDrawBtnActionPerformed(evt);
            }
        });

        sendtoTestBtn.setBackground(new java.awt.Color(250, 250, 250));
        sendtoTestBtn.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        sendtoTestBtn.setText("send to test");
        sendtoTestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendtoTestBtnActionPerformed(evt);
            }
        });

        jScrollPane7.setBackground(new java.awt.Color(250, 250, 250));

        ongoingTbl.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        ongoingTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Sender", "Reciever", "Donation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ongoingTbl.setGridColor(new java.awt.Color(250, 250, 250));
        ongoingTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ongoingTblMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(ongoingTbl);

        jScrollPane6.setBackground(new java.awt.Color(250, 250, 250));

        processTbl.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        processTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Sender", "Reciever", "Donation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        processTbl.setGridColor(new java.awt.Color(250, 250, 250));
        processTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                processTblMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(processTbl);

        jScrollPane8.setBackground(new java.awt.Color(250, 250, 250));

        untestedTbl.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        untestedTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Sender", "Reciever", "Donation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        untestedTbl.setGridColor(new java.awt.Color(250, 250, 250));
        untestedTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                untestedTblMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(untestedTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(453, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sendtoTestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodDrawBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(assignBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(353, 353, 353))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(assignBtn)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bloodDrawBtn)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendtoTestBtn)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = ongoingTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request.");
            return;
        }

        WorkRequest request = (WorkRequest) ongoingTbl.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Nurse Pending");
        userAccount.getWorkQueue().getWorkReqestList().add(request);
        JOptionPane.showMessageDialog(null, "Assigned succeed.");

        populateOngoingTbl();
        populateProcessTbl();
    }//GEN-LAST:event_assignBtnActionPerformed

    private void bloodDrawBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodDrawBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = processTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request.");
            return;
        }
        WorkRequest request = (WorkRequest) processTbl.getValueAt(selectedRow, 0);
        request.setStatus("Drawn");

        populateOngoingTbl();
        populateProcessTbl();
    }//GEN-LAST:event_bloodDrawBtnActionPerformed

    private void sendtoTestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendtoTestBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = processTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request.");
            return;
        }
        WorkRequest request = (WorkRequest) processTbl.getValueAt(selectedRow, 0);
        request.setStatus("Untested");

        populateUntestedTbl();
        populateProcessTbl();
    }//GEN-LAST:event_sendtoTestBtnActionPerformed

    private void ongoingTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ongoingTblMouseClicked
        // TODO add your handling code here:

        bloodDrawBtn.setEnabled(false);
        sendtoTestBtn.setEnabled(false);
    }//GEN-LAST:event_ongoingTblMouseClicked

    private void processTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_processTblMouseClicked
        // TODO add your handling code here:
        assignBtn.setEnabled(false);
        sendtoTestBtn.setEnabled(false);
    }//GEN-LAST:event_processTblMouseClicked

    private void untestedTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_untestedTblMouseClicked
        // TODO add your handling code here:
        assignBtn.setEnabled(false);
        bloodDrawBtn.setEnabled(false);
    }//GEN-LAST:event_untestedTblMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton bloodDrawBtn;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable ongoingTbl;
    private javax.swing.JTable processTbl;
    private javax.swing.JButton sendtoTestBtn;
    private javax.swing.JTable untestedTbl;
    // End of variables declaration//GEN-END:variables
}
